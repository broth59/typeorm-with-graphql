{"version":3,"sources":["/home/broth59/Desktop/Projects/Node/Inversify/test/client/oracle.test.ts"],"names":[],"mappings":"cAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["// //bootstrap\n// //module\n// import { ApolloServer } from '@apollo/server'\n// import { ApolloClient, InMemoryCache, gql, ApolloLink } from '@apollo/client'\n// import { onError } from 'apollo-link-error'\n// import 'cross-fetch/polyfill'\n// import 'babel-polyfill'\n// import oracledb from 'oracledb'\n\n// // beforeAll(async ()=>{\n\t\n// // })\n\n\n// describe('Oracle db connection', ()=>{\n\t\n// \tit('connect', async ()=>{\n// \t\tconst errorLink = onError(({ graphQLErrors }) => {\n// \t\t\tif (graphQLErrors) graphQLErrors.map(({ message }) => console.log(message))\n// \t\t  }) as any\n\n// \t\tconst client = new ApolloClient({\n// \t\t\turi: 'http://localhost:3020/graphql',\n// \t\t\tcache: new InMemoryCache(),\t\n// \t\t\tlink: ApolloLink.from([ errorLink ])\n// \t\t});\t\t\n// \t\tawait client\n// \t\t.query({\n// \t\t\tquery: gql`\n// \t\t\t\tquery lecture {\n// \t\t\t\t\tcotent_no\n// \t\t\t\t}\n// \t\t\t`\n// \t\t\t,\n// \t\t\tvariables: {\n\t\t\t\t\n// \t\t\t}\n// \t\t})\n// \t\t.then(result => console.log(result))\n// \t\t.catch(({ message })=>console.log(message));\n\t\t\t\n// \t}, 20000)\n\n// })"]}