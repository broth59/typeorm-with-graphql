{"version":3,"sources":["/home/broth59/Desktop/Projects/Node/Inversify/test/server/inversify.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAIA,IAAM,MAAN;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,0BACc;AACN,aAAO,MAAP;AACH;AAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,GAAA;;AAAM,MAAM,GAAA,UAAA,CAAA,CADX,WAAA,CAAA,UAAA,EACW,CAAA,EAAN,MAAM,CAAN;;AAON,IAAM,KAAN;AAEI,iBAAmB,MAAnB,EAAiC;AAAA;;AAC7B,SAAK,MAAL,GAAc,MAAd;AACH;;AAJL;AAAA;AAAA,4BAKgB;AAAK,aAAO,KAAK,MAAL,CAAY,GAAZ,EAAP;AAA2B;AALhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,GAAA;;AAAM,KAAK,GAAA,UAAA,CAAA,CADV,WAAA,CAAA,UAAA,EACU,E,iCAEoB,M,EAFpB,CAAA,EAAL,KAAK,CAAL;AAQN,IAAM,SAAS,GAAG,IAAI,WAAA,CAAA,SAAJ,EAAlB;AAGA,QAAQ,CAAC,EAAD,EAAK,YAAI;AAEhB,EAAA,SAAS,CAAC,YAAI;AACb,IAAA,SAAS,CAAC,IAAV,CAAe,MAAf,EAAuB,MAAvB;AACA,GAFQ,CAAT;AAIA,EAAA,EAAE,CAAC,2CAAD,EAA8C,YAAI;AACnD,QAAM,KAAK,GAAG,SAAS,CAAC,OAAV,CAAkB,KAAlB,CAAd;AACA,IAAA,MAAM,CAAC,KAAK,CAAC,KAAN,EAAD,CAAN,CAAsB,OAAtB,CAA8B,MAA9B;AACA,GAHC,EAGC,KAHD,CAAF;AAKA,EAAA,EAAE,CAAC,wCAAD,EAA2C,YAAI;AAChD,QAAM,MAAM,GAAG,SAAT,MAAS;AAAA,aAAM,SAAS,CAAC,GAAV,CAAc,KAAd,CAAN;AAAA,KAAf;;AACA,IAAA,MAAM,CAAC,MAAD,CAAN,CAAe,OAAf,CAAuB,wDAAvB;AACA,GAHC,CAAF;AAIA,CAfO,CAAR;;;;;;;;;;;;0BAlBM,M;0BAOA,K;0BAQA,S","sourcesContent":["import 'reflect-metadata'\nimport { injectable, Container } from 'inversify'\n\n\n@injectable()\nclass Katana {\n    public hit() {\n        return \"cut!\";\n    }\n}\n\n@injectable()\nclass Ninja implements Ninja {\n    public katana: Katana;\n    public constructor(katana: Katana) {\n        this.katana = katana;\n    }\n    public fight() { return this.katana.hit(); }\n}\n\nconst container = new Container();\n\n\ndescribe('', ()=>{\n\n\tbeforeAll(()=>{\n\t\tcontainer.bind(Katana).toSelf();\t\n\t})\n\n\tit('Inversify resolve root class without bind', ()=>{\n\t\tconst ninja = container.resolve(Ninja);\n\t\texpect(ninja.fight()).toEqual(\"cut!\");\n\t}, 10000)\n\n\tit('Inversify resolve root class with bind', ()=>{\n\t\tconst tryGet = () => container.get(Ninja);\n\t\texpect(tryGet).toThrow(\"No mathing bindings found for serviceIdentifier: Ninja\");\n\t})\n})\n\n"]}