{"version":3,"sources":["/home/broth59/Desktop/Projects/Node/Inversify/test/client/oracle.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAA,QAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,OAAA,CAAA,sBAAA,CAAA;;AACA,OAAA,CAAA,gBAAA,CAAA,C,CAGA;AAEA;;;AAGA,QAAQ,CAAC,sBAAD,EAAyB,YAAI;AAEpC,EAAA,EAAE,CAAC,SAAD,uEAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACP,YAAA,SADO,GACK,mBAAA,CAAA,OAAA,CAAQ,iBAAsB;AAAA,kBAAnB,aAAmB,SAAnB,aAAmB;AAC/C,kBAAI,aAAJ,EAAmB,aAAa,CAAC,GAAd,CAAkB;AAAA,oBAAG,OAAH,SAAG,OAAH;AAAA,uBAAiB,OAAO,CAAC,GAAR,CAAY,OAAZ,CAAjB;AAAA,eAAlB;AACjB,aAFe,CADL;AAKP,YAAA,MALO,GAKE,IAAI,QAAA,CAAA,YAAJ,CAAiB;AAC/B,cAAA,GAAG,EAAE,+BAD0B;AAE/B,cAAA,KAAK,EAAE,IAAI,QAAA,CAAA,aAAJ,EAFwB;AAG/B,cAAA,IAAI,EAAE,QAAA,CAAA,UAAA,CAAW,IAAX,CAAgB,CAAE,SAAF,CAAhB;AAHyB,aAAjB,CALF;AAAA;AAAA,mBAUP,MAAM,CACX,KADK,CACC;AACN,cAAA,KAAK,EAAE,QAAA,CAAA,GAAF,mBADC;AAON,cAAA,SAAS,EAAE;AAPL,aADD,EAYL,IAZK,CAYA,UAAA,MAAM;AAAA,qBAAI,OAAO,CAAC,GAAR,CAAY,MAAZ,CAAJ;AAAA,aAZN,WAaC;AAAA,kBAAG,OAAH,SAAG,OAAH;AAAA,qBAAe,OAAO,CAAC,GAAR,CAAY,OAAZ,CAAf;AAAA,aAbD,CAVO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ,IAyBC,KAzBD,CAAF;AA2BA,CA7BO,CAAR","sourcesContent":["//bootstrap\n//module\nimport { ApolloServer } from '@apollo/server'\nimport { ApolloClient, InMemoryCache, gql, ApolloLink } from '@apollo/client'\nimport { onError } from 'apollo-link-error'\nimport 'cross-fetch/polyfill'\nimport 'babel-polyfill'\nimport oracledb from 'oracledb'\n\n// beforeAll(async ()=>{\n\t\n// })\n\n\ndescribe('Oracle db connection', ()=>{\n\t\n\tit('connect', async ()=>{\n\t\tconst errorLink = onError(({ graphQLErrors }) => {\n\t\t\tif (graphQLErrors) graphQLErrors.map(({ message }) => console.log(message))\n\t\t  }) as any\n\n\t\tconst client = new ApolloClient({\n\t\t\turi: 'http://localhost:3020/graphql',\n\t\t\tcache: new InMemoryCache(),\t\n\t\t\tlink: ApolloLink.from([ errorLink ])\n\t\t});\t\t\n\t\tawait client\n\t\t.query({\n\t\t\tquery: gql`\n\t\t\t\tquery lecture {\n\t\t\t\t\tcotent_no\n\t\t\t\t}\n\t\t\t`\n\t\t\t,\n\t\t\tvariables: {\n\t\t\t\t\n\t\t\t}\n\t\t})\n\t\t.then(result => console.log(result))\n\t\t.catch(({ message })=>console.log(message));\n\t\t\t\n\t}, 20000)\n\n})"]}