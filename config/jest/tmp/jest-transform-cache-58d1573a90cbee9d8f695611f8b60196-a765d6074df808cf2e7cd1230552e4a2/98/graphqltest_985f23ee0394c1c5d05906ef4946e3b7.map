{"version":3,"sources":["/home/broth59/Desktop/Projects/Node/Inversify/test/server/graphql.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,OAAA,CAAA,sBAAA,CAAA;;AACA,OAAA,CAAA,gBAAA,CAAA;;AAEA,EAAE,CAAC,oBAAD;AAAA,qEAAuB,iBAAO,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACf,YAAA,MADe,GACN,IAAI,QAAA,CAAA,YAAJ,CAAiB;AAC5B,cAAA,GAAG,EAAE,6BADuB;AAE5B,cAAA,KAAK,EAAE,IAAI,QAAA,CAAA,aAAJ;AAFqB,aAAjB,CADM;AAAA;AAAA,mBAMS,MAAM,CAAC,KAAP,CAAa;AACvC,cAAA,KAAK,EAAE,QAAA,CAAA,GAAF;AADkC,aAAb,CANT;;AAAA;AAAA;AAMb,YAAA,KANa,uBAMb,KANa;AAMN,YAAA,IANM,uBAMN,IANM;AAqBrB,YAAA,MAAM,CAAC,KAAD,CAAN,CAAc,SAAd;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AAEA,YAAA,IAAI;;AAxBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA,KAyBC,KAzBD,CAAF","sourcesContent":["import { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nimport 'cross-fetch/polyfill';\nimport 'babel-polyfill';\n\nit('Server return list', async (done) => {\n    const client = new ApolloClient({\n        uri: 'http:localhost:3020/graphql',\n        cache: new InMemoryCache(),\n    });\n\n    const { error, data } = await client.query({\n        query: gql`\n            query list {\n                users {\n                    id\n                    email\n                    photo {\n                        photo_no\n                        image_path\n                    }\n                }\n            }\n        `,\n    });\n\n    expect(error).toBeFalsy();\n    console.log(data);\n\n    done();\n}, 10000);\n"]}