{"version":3,"sources":["/home/broth59/Desktop/Projects/Node/Inversify/test/server/graphql.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,OAAA,CAAA,sBAAA,CAAA;;AACA,OAAA,CAAA,gBAAA,CAAA;;AAEA,EAAE,CAAC,qBAAD;AAAA,qEAAwB,iBAAO,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChB,YAAA,MADgB,GACP,IAAI,QAAA,CAAA,YAAJ,CAAiB;AAC5B,cAAA,GAAG,EAAE,+BADuB;AAE5B,cAAA,KAAK,EAAE,IAAI,QAAA,CAAA,aAAJ;AAFqB,aAAjB,CADO;AAAA;AAAA,mBAMQ,MAAM,CAAC,KAAP,CAAa;AACvC,cAAA,KAAK,EAAE,QAAA,CAAA,GAAF;AADkC,aAAb,CANR;;AAAA;AAAA;AAMd,YAAA,IANc,uBAMd,IANc;AAMR,YAAA,KANQ,uBAMR,KANQ;AAmBtB,YAAA,MAAM,CAAC,IAAD,CAAN,CAAa,UAAb;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AAEA,YAAA,IAAI;;AAtBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,KAuBC,KAvBD,CAAF","sourcesContent":["import { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nimport 'cross-fetch/polyfill';\nimport 'babel-polyfill';\n\nit('Server return vaule', async (done) => {\n    const client = new ApolloClient({\n        uri: 'http://localhost:3020/graphql',\n        cache: new InMemoryCache(),\n    });\n\n    const { data, error } = await client.query({\n        query: gql`\n            query list {\n                users {\n                    id\n                    email\n                    photo {\n                        image_path\n                    }\n                }\n            }\n        `,\n    });\n    expect(data).toBeTruthy();\n    console.log(data);\n\n    done();\n}, 10000);\n"]}