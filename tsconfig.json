{
  "compilerOptions": {
	"jsx": "react",
    /* Visit https://aka.ms/tsconfig.json to read more about this file */
    
    /* 모듈 해석 */
    "target"  : "ES2016",                               /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module"  : "commonjs",                             /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
	// "jsx"       : "preserve",                            /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    // "jsxFactory": "React.createElement",              // jsx 팩토리 함수 설정,      
		   
	//"allowSyntheticDefaultImports"  : true,             /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
	"esModuleInterop"               : true,             /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "resolveJsonModule"             : true,
    "allowJs"                       : true,
    
    "moduleResolution"    : "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "preserveSymlinks"    : true,              /* Do not resolve the real path of symlinks. */
    //"allowUmdGlobalAccess": true,              /* Allow accessing UMD globals from modules. */

    
    /* 구문 해석 */
    //Strict Type-Checking Options
    "strict"                    : true,             /* Enable all strict type-checking options. */
    "noImplicitReturns"         : true,             /* Report error when not all code paths in function return a value. */
    "noFallthroughCasesInSwitch": true,             /* Report errors for fallthrough cases in switch statement. */
    // "noUnusedLocals": true,                      /* Report errors on unused locals. */
    // "noUnusedParameters": true,                  /* Report errors on unused parameters. */
    //Experimental Options
    "experimentalDecorators"  : true,           /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata"   : true,           /* Enables experimental support for emitting type metadata for decorators. */
	

    /* 예약어 해석 */
    //경로 해석
    "baseUrl": "./",                            /* Base directory to resolve non-absolute module names. */
    "paths": {
      "@config/*" 		: ["config/*"],
      
      //interface
      "@interface/*" 	: ["src/interface/*"],
      "@domain/*"    	: ["src/interface/domain/*"],

      //client      
      "@client/*" 	 	: ["src/client/*"],
	  "@component/*" 	: ["src/client/component/*"],
	  "@page/*" 		: ["src/client/component/page/*"],
	  "@store/*"        : ["src/client/store/*"],
	  "@hooks/*"        : ["src/client/hooks/*"],
	  "@decorators/*"   : ["src/client/decorators/*"],


      //server
      "@server/*" 		: ["src/server/*"],
     
    },                                     
                                               
    // "rootDirs"  : [],                       /* List of root folders whose combined content represents the structure of the project at runtime. */
    "typeRoots" : [
      "./node_modules/@types",	"./@types"
    ],                       /* List of folders to include type definitions from. */
    // "types"     : [],                       /* Type declaration files to be included in compilation. */
    
    
    /* 빌드 */
    //디버깅
    //"traceResolution" : true,
    "sourceMap"       : true,                                 /* Generates corresponding '.map' file. */
    // "sourceRoot": "",                                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    "mapRoot"         : "../../dist/map",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,                               /* Emit a single file with source maps instead of having a separate file. */
    "inlineSources"   : true,                                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    //컴파일
    "outDir": "../../dist",                                          /* Redirect output structure to the directory. */
    //"importHelpers"                     : true,                 /* Import emit helpers from 'tslib'. */
    "removeComments"                    : true,                 /* Do not emit comments to output. */    
    "forceConsistentCasingInFileNames"  : true,  
    "noEmitOnError": false,
    "charset": "utf8",

    // "declaration": true,                   /* Generates corresponding '.d.ts' file. */
    // "declarationMap": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. */
    // "composite": true,                     /* Enable project compilation */
    // "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information */
    // "noEmit": true,                        /* Do not emit outputs. */

	/* 플러그인 */
	"plugins": [
		{
			"name": "typescript-snapshots-plugin",
			"snapshotDir": "__snapshots__",
			"snapshotCallIdentifiers": [
				"toMatchSnapshot",
				"myMatchSnapshot"
			]
		}
	],
  },

  "include": [
    "../../**/*",
    "../../src/**/*", "src/interface/entity/.ts",
  ],

  "exclude": [
    "node_modules",
    //클라이언트 제외
    //"../src/client/**/*",
    //서버 제외
    //"../src/server/**/*",
  ]
}
